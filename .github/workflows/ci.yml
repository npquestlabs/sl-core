# .github/workflows/ci.yml

# Name of the workflow as it will appear in the GitHub Actions tab
name: Node.js CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for main and production branches
  push:
    branches:
      - main
      - production # Added production branch
  # Triggers the workflow on pull request events targeting main and production branches
  pull_request:
    branches:
      - main
      - production # Added production branch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-test"
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest # Use the latest available Ubuntu runner

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Sets up a specific version of Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # Specify the Node.js version you are using (e.g., 18.x, 20.x, 22.x)
          cache: 'npm' # Automatically cache npm dependencies based on package-lock.json

      # Step 3: Installs dependencies using npm ci (clean install - faster and more reliable for CI)
      - name: Install dependencies
        run: npm ci

      # Step 4: Runs the build script defined in your package.json
      # The `--if-present` flag ensures the command only runs if the "build" script exists
      - name: Build project
        run: npm run build --if-present

      # Step 5: Runs the test script defined in your package.json
      - name: Run tests
      # Map GitHub Secrets/Variables to process.env variables
        env:
          # Syntax: ${{ secrets.NAME_IN_GITHUB_SECRETS }}
          DIRECT_URL: ${{ secrets.TEST_DIRECT_URL }}
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }} # Example mapping
          APP_EMAIL: ${{ secrets.TEST_APP_EMAIL }}
          APP_EMAIL_PASS: ${{ secrets.TEST_APP_EMAIL_PASS }}
          JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}
          CLIENT_URL: ${{ secrets.TEST_CLIENT_URL }}
          # Syntax: ${{ vars.NAME_IN_GITHUB_VARIABLES }}
          PORT: ${{ vars.TEST_PORT }}
          NODE_ENV: test
        run: npm test
